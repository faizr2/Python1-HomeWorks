# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

# Модифицирую последнее задание из easy

import math
from random import randint
L = [randint(1, 100) for i in range(25)]  # создаю произвольный список из 25 целых чисел.
print(L)
NL = [int(math.sqrt(num)) for num in L if num > 0 and math.sqrt(num).is_integer()]
print(NL)

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

dictDay = {1: 'первое',
            2: 'второе',
            3: 'третье',
            4: 'четвертое',
            5: 'пятое',
            6: 'шестое',
            7: 'седьмое',
            8: 'восьмое',
            9: 'девятое',
            10: 'десятое',
            11: 'одиннадцатое',
            12: 'двенадцатое',
            13: 'тринадцатое',
            14: 'четырнадцатое',
            15: 'пятнадцатое',
            16: 'шестнадцатое',
            17: 'семнадцатое',
            18: 'восемнадцатое',
            19: 'девятнадцатое',
            20: 'двадцатое',
            21: 'двадцать первое',
            22: 'двадцать второе',
            23: 'двадцать третье',
            24: 'двадцать четвертое',
            25: 'двадцать пятое',
            26: 'двадцать шестое',
            27: 'двадцать седьмое',
            28: 'двадцать восьмое',
            29: 'двадцать девятое',
            30: 'тридцатое',
            31: 'тридцать первое'
            }
dictMonth = {1: 'января',
            2: 'февраля',
            3: 'марта',
            4: 'апреля',
            5: 'мая',
            6: 'июня',
            7: 'июля',
            8: 'августа',
            9: 'сентября',
            10: 'октября',
            11: 'ноября',
            12: 'декабря'
            }

date=input('Введите, пожалуйста дату в формате dd.mm.yyyy:') # Это строка с вводимой датой
day=int(date[0:2])
dD=dictDay[day]
print(day)
month=int(date[3:5])
dM=dictMonth[month]
print(month)
year=int(date[6:])
print(year)
print ( 'Это {} {} {}' года. format ( dD , dM, year ))




# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

# Я сделала это задание так, как тут написала, а потом использовала во всех остальных задачах,
# где требовался произвольный список:

n=10
import math   # импортируем что там у Python  есть про математику
from random import randint    #  ещё импортируем
L = [randint(-100, 100) for i in range(n)]  # создаю произвольный список из n целых чисел,но n задала выше.
print("Просто произвольный список", L)

# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

L = [randint(1, 100) for i in range(25)]  # создаю произвольный список из 25 целых чисел.
# нашла на просторах элегантный способ при помощи set, а его мы проходили.
# Только не сохранится исходный порядок. Но в условии задачи и ведь и нет такого требования.
L1 = list(set(L))
print("Произвольный список из 25 целых чисел:", L)
print("Cписок неповторяющихся элементов этого списка:", L1)
# -------------------------------------
# Это не получилось, почему-то не хотят удаляться из исходного массива
#--------------------------------------
L2=L  # создаем копию исходного списка
L2_non_uniq=[]    # список неуникальных элементов исходного списка
L2_uniq=L         # список уникальных элементов исходного списка
print("Тот же список:", L2)
L2.sort()    # сортируем список, тогда одинаковые окажутся рядом
print("Тот же список, сортированный:", L2)
for i in range(0,len(L2)-1):      # иду по элементам и сравниваю их друг с другом
               if L2[i] == L2[i+1]:
                   print(str(L2[i]) + ' is a duplicate')
                   L2_non_uniq.append(L2[i])   # теперь у меня есть список повторяющихся элементов
# повторим ещё раз, для нового массива (может получиться так, что и в нём будут повторяющиеся)
for i in range(0,len(L2_non_uniq)-1):      # иду по элементам и сравниваю их друг с другом
               if L2_non_uniq[i] == L2_non_uniq[i+1]:
                   print(str(L2_non_uniq[i]) + ' twice a duplicate')
                   L2_non_uniq.remove(L2_non_uniq[i])
# теперь если элемент не попал в черный список, но он пойдет в список уникальных элементов
print("Cписок повторяющихся элементов этого списка:", L2_non_uniq)
for num in L1:
     if num in L2_non_uniq:
         L2_uniq.remove(num)
print("Cписок элементов этого списка не имеющих повторений:", L2_uniq)
# время поджимает, не пойму в чем тут дело. Не работает. Сдаю как есть.
# ещё иногда вылетает ошибка list index out of range,  но иногда не вылетает....



